pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['staging', 'prod'], description: 'Select the deployment environment')
    }

    environment {
        REMOTE_STAGE_SERVER = '192.168.5.222'
        DEPLOY_ZIP = 'php-app-${BUILD_NUMBER}.zip'
        STAGING_DIR = '/var/www/html'
        PROD_DIR = '/var/www/html'
        DEPLOY_STATUS = 'NOT_STARTED'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/madhulmksemt/php_site.git'
            }
        }

        stage(
            'Build/Zip the Application'
        ) {
            steps {
                script {
                    echo "Zip the application..."
                    sh "zip -r ${env.DEPLOY_ZIP} . -x '*.git*'"
                    archiveArtifacts artifacts: "${DEPLOY_ZIP}", onlyIfSuccessful: true
                }
            }
        }

        stage('Upload to Remote Server') {
            steps {
                script {
                    echo "Uploading ${env.DEPLOY_ZIP} to remote server..."
                    sh """
                    scp -o StrictHostKeyChecking=no ${env.DEPLOY_ZIP} user@${env.REMOTE_STAGE_SERVER}:/tmp/
                    """
                }
            }
        }
        stage('Unzip on Remote Server') {
            steps {
                script {
                    echo "Unzipping ${env.DEPLOY_ZIP} on remote server..."
                    sh """
                    ssh -o StrictHostKeyChecking=no user@${env.REMOTE_STAGE_SERVER} 'unzip -o /tmp/${env.DEPLOY_ZIP} -d /var/www/html/'
                    """
                }
            }
        }
        stage('Clean Up Remote Server') {
            steps {
                script {
                    echo "Cleaning up remote server..."
                    sh """
                    ssh -o StrictHostKeyChecking=no user@${env.REMOTE_STAGE_SERVER} 'rm /tmp/${env.DEPLOY_ZIP}'
                    """
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    echo "Running tests..."
                    // Here you can add commands to run your tests
                    // For example, if you have PHPUnit tests:
                    // sh 'vendor/bin/phpunit'
                }
            }
        }

    }

    post {
        success {
            script {
                if (env.DEPLOY_STATUS == 'SUCCESS') {
                    echo "Deployment to ${params.ENVIRONMENT} was successful"
                }
            }
        }
        failure {
            script {
                echo "Deployment to ${params.ENVIRONMENT} failed!"

            }    
        }
    }
}
